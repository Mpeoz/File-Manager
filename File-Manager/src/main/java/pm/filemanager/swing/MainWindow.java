/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pm.filemanager.swing;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import pm.filemanager.controllers.ClearTableController;
import pm.filemanager.controllers.JTreeValueChangedController;
import pm.filemanager.controllers.SetTreeModelController;
import pm.filemanager.controllers.setTableFileDetailsController;
import pm.filemanager.controllers.checkPathIfDirectoryController;
import pm.filemanager.controllers.stringIfEndsWithSeparatorController;
import pm.filemanager.operations.CreateNewFileOperation;
import pm.filemanager.operations.CreateNewFolderOperation;
import pm.filemanager.operations.PathCopyToClipboardOperations;

/**
 *
 * @author PTsilopoulos
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form mainWindow
     */
    public MainWindow() {
        initComponents();
        //set tree model
        SetTreeModelController newSetTreeModelController = new SetTreeModelController();
        rootFileTree = newSetTreeModelController.SetTreeModelController(rootFileTree);
        
        //add listener
        JTreeValueChangedController newJTreeValueChangedController = new JTreeValueChangedController();
        newJTreeValueChangedController.valueChanged(rootFileTree, filePathTextField);
        
        PathCopyToClipboardOperations newPathCopyToClipboardOperations = new PathCopyToClipboardOperations();
        
        this.setDefaultCloseOperation(this.EXIT_ON_CLOSE);
       
       
//        //drag and drop
//        TreeDragAndDropOperations newTreeDragAndDropOperations = new TreeDragAndDropOperations();
//        newTreeDragAndDropOperations.getContent(rootFileTree);
//    //this.add(new TreeDragAndDropOperations().getContent());   
    }
    
    /**
     * 
     * Add table details
     */
    private void ClearTableAddTableDetails(){
        
        setTableFileDetailsController newTableFileDetailsController = new setTableFileDetailsController();
        //clear table
        ClearTableController clearTable = new ClearTableController();
        boolean isClear = clearTable.ClearTable(fileDetailsTable);

        //if is clear add new selected path
        if (isClear) {
            //check if show all file details
            try {
                newTableFileDetailsController.setTableFileDetailsController(fileDetailsTable, filePathTextField.getText().toString());
            } catch (Exception e) {
                try {
                    throw e;
                } catch (Exception ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablePopupMenu = new javax.swing.JPopupMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        StatusBar = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        UpButton = new javax.swing.JButton();
        RefreshButton = new javax.swing.JButton();
        homeDirButton = new javax.swing.JButton();
        rootFileTreeScrollPane = new javax.swing.JScrollPane();
        rootFileTree = new javax.swing.JTree();
        filePathTextField = new javax.swing.JTextField();
        rootFileTableScrollPane = new javax.swing.JScrollPane();
        fileDetailsTable = new javax.swing.JTable();
        MenuBar = new javax.swing.JMenuBar();
        propertiesMenu = new javax.swing.JMenu();
        createFolderMenuItem = new javax.swing.JMenuItem();
        createDocumentMenu = new javax.swing.JMenu();
        createTextDocumentMenuItem = new javax.swing.JMenuItem();
        PropertiesMenuItem = new javax.swing.JMenuItem();
        closeMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        editMenu = new javax.swing.JMenu();
        CutMenuItem = new javax.swing.JMenuItem();
        CopyMenuItem = new javax.swing.JMenuItem();
        PasteMenuItem = new javax.swing.JMenuItem();
        DeleteMenuItem = new javax.swing.JMenuItem();
        RenameMenuItem = new javax.swing.JMenuItem();
        helpMenuItem = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();

        cutMenuItem.setText("jMenuItem1");
        tablePopupMenu.add(cutMenuItem);

        jMenuItem2.setText("jMenuItem2");
        tablePopupMenu.add(jMenuItem2);

        jMenuItem3.setText("jMenuItem3");
        tablePopupMenu.add(jMenuItem3);

        jMenuItem4.setText("jMenuItem4");
        tablePopupMenu.add(jMenuItem4);

        jMenuItem5.setText("jMenuItem5");
        tablePopupMenu.add(jMenuItem5);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        StatusBar.setText("Status");
        StatusBar.setName("Status"); // NOI18N

        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        homeDirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeDirButtonActionPerformed(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        rootFileTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        rootFileTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rootFileTreeMouseClicked(evt);
            }
        });
        rootFileTree.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rootFileTreeKeyPressed(evt);
            }
        });
        rootFileTreeScrollPane.setViewportView(rootFileTree);

        filePathTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filePathTextFieldActionPerformed(evt);
            }
        });
        filePathTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                filePathTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                filePathTextFieldKeyTyped(evt);
            }
        });

        fileDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Date modified", "Type", "Size"
            }
        ));
        fileDetailsTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fileDetailsTableKeyReleased(evt);
            }
        });
        rootFileTableScrollPane.setViewportView(fileDetailsTable);

        MenuBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuBarMouseClicked(evt);
            }
        });

        propertiesMenu.setText("File");

        createFolderMenuItem.setText("Create Folder");
        createFolderMenuItem.setName("CreateFolder"); // NOI18N
        createFolderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFolderMenuItemActionPerformed(evt);
            }
        });
        propertiesMenu.add(createFolderMenuItem);
        createFolderMenuItem.getAccessibleContext().setAccessibleParent(createFolderMenuItem);

        createDocumentMenu.setText("Create Document");

        createTextDocumentMenuItem.setText("text document");
        createTextDocumentMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTextDocumentMenuItemActionPerformed(evt);
            }
        });
        createDocumentMenu.add(createTextDocumentMenuItem);

        propertiesMenu.add(createDocumentMenu);

        PropertiesMenuItem.setText("Properties");
        PropertiesMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PropertiesMenuItemActionPerformed(evt);
            }
        });
        propertiesMenu.add(PropertiesMenuItem);

        closeMenuItem.setText("Close");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        propertiesMenu.add(closeMenuItem);
        propertiesMenu.add(jSeparator1);

        MenuBar.add(propertiesMenu);

        editMenu.setText("Edit");

        CutMenuItem.setText("Cut");
        CutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CutMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(CutMenuItem);

        CopyMenuItem.setText("Copy");
        editMenu.add(CopyMenuItem);

        PasteMenuItem.setText("Paste");
        PasteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasteMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(PasteMenuItem);

        DeleteMenuItem.setText("Delete");
        editMenu.add(DeleteMenuItem);

        RenameMenuItem.setText("Rename");
        editMenu.add(RenameMenuItem);

        MenuBar.add(editMenu);

        helpMenuItem.setText("Help");

        contentsMenuItem.setText("Contents...");
        helpMenuItem.add(contentsMenuItem);

        MenuBar.add(helpMenuItem);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(StatusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rootFileTreeScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rootFileTableScrollPane))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(homeDirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(filePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 811, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(homeDirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(filePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rootFileTableScrollPane)
                    .addComponent(rootFileTreeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StatusBar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        //statusbar.setBorder(BorderFactory.createEtchedBorder(
            // EtchedBorder.RAISED));

    pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * private void closeMenuItemActionPerformed
 * @param evt 
 */
    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuItemActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeMenuItemActionPerformed

    private void PasteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasteMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasteMenuItemActionPerformed
/**
 * 
 * @param evt 
 */
    private void createFolderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createFolderMenuItemActionPerformed
    
        checkPathIfDirectoryController checkIfDirectory = new checkPathIfDirectoryController();
        boolean ifDirectory = checkIfDirectory.checkPathIfDirectory(filePathTextField.getText().toString());
            //TODO: refactor         
              //check if is a Directory
        if (ifDirectory) {
            //check if file and with / or not
            stringIfEndsWithSeparatorController newStringIfEndsWithSeparatorController = new stringIfEndsWithSeparatorController();
           String pathForCreateFolder = newStringIfEndsWithSeparatorController.stringIfEndsWithSeparator(filePathTextField);
            //Create a new Folder..
            CreateNewFolderOperation createFolder = new CreateNewFolderOperation();
            createFolder.createNewFolderOperation(pathForCreateFolder, 1);
            
        } else {
            System.out.println("You must select directory to make a new folder");

        }
        // add new table details  
       ClearTableAddTableDetails();


    }//GEN-LAST:event_createFolderMenuItemActionPerformed

    private void CutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CutMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CutMenuItemActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add ActionListener to catch the Image Exception

    }//GEN-LAST:event_backButtonActionPerformed

    private void rootFileTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rootFileTreeMouseClicked
         ClearTableAddTableDetails();
    }//GEN-LAST:event_rootFileTreeMouseClicked

    private void rootFileTreeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rootFileTreeKeyPressed

    }//GEN-LAST:event_rootFileTreeKeyPressed

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged

    }//GEN-LAST:event_formWindowStateChanged

    private void createTextDocumentMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTextDocumentMenuItemActionPerformed
         checkPathIfDirectoryController checkIfDirectory = new checkPathIfDirectoryController();
        boolean ifDirectory = checkIfDirectory.checkPathIfDirectory(filePathTextField.getText().toString());
        
        //check if is a Directory
        if (ifDirectory) {
            //check if file and with / or not
            stringIfEndsWithSeparatorController newStringIfEndsWithSeparatorController = new stringIfEndsWithSeparatorController();
            String pathForCreateFile = newStringIfEndsWithSeparatorController.stringIfEndsWithSeparator(filePathTextField);
            //Create a new text File..
            CreateNewFileOperation newTextFile = new CreateNewFileOperation();
           newTextFile.CreateNewFile(pathForCreateFile,1);
           
            
        } else {
            System.out.println("You must select directory to make a new text file");

        }
        ClearTableAddTableDetails();
    }//GEN-LAST:event_createTextDocumentMenuItemActionPerformed

    private void PropertiesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PropertiesMenuItemActionPerformed
         
       
    }//GEN-LAST:event_PropertiesMenuItemActionPerformed
/**
 * private void function homeDirButton
 * @param evt 
 * 
 */
    private void homeDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeDirButtonActionPerformed

        SetTreeModelController newSetTreeModelController = new SetTreeModelController();
        rootFileTree = newSetTreeModelController.SetTreeModelController(rootFileTree);
        //set Home Directory to filepathTextField 
        filePathTextField.setText("C:\\");
        ClearTableAddTableDetails();
    }//GEN-LAST:event_homeDirButtonActionPerformed

    private void fileDetailsTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fileDetailsTableKeyReleased
       
    }//GEN-LAST:event_fileDetailsTableKeyReleased

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
       
    }//GEN-LAST:event_formMouseClicked

    private void MenuBarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuBarMouseClicked
       
        
    }//GEN-LAST:event_MenuBarMouseClicked

    private void filePathTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filePathTextFieldKeyPressed
    ClearTableAddTableDetails();
    }//GEN-LAST:event_filePathTextFieldKeyPressed

    private void filePathTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filePathTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filePathTextFieldActionPerformed

    private void filePathTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filePathTextFieldKeyTyped
     ClearTableAddTableDetails();
    }//GEN-LAST:event_filePathTextFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CopyMenuItem;
    private javax.swing.JMenuItem CutMenuItem;
    private javax.swing.JMenuItem DeleteMenuItem;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenuItem PasteMenuItem;
    private javax.swing.JMenuItem PropertiesMenuItem;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JMenuItem RenameMenuItem;
    private javax.swing.JLabel StatusBar;
    private javax.swing.JButton UpButton;
    public javax.swing.JButton backButton;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenu createDocumentMenu;
    private javax.swing.JMenuItem createFolderMenuItem;
    private javax.swing.JMenuItem createTextDocumentMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JTable fileDetailsTable;
    private javax.swing.JTextField filePathTextField;
    private javax.swing.JMenu helpMenuItem;
    private javax.swing.JButton homeDirButton;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JButton nextButton;
    private javax.swing.JMenu propertiesMenu;
    private javax.swing.JScrollPane rootFileTableScrollPane;
    private javax.swing.JTree rootFileTree;
    private javax.swing.JScrollPane rootFileTreeScrollPane;
    private javax.swing.JPopupMenu tablePopupMenu;
    // End of variables declaration//GEN-END:variables
}
